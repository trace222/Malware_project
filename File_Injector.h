#pragma once
#include <windows.h>


#pragma comment(lib, "ntdll.lib")


class File_Injector
{
public:
	File_Injector(HANDLE processHandle = NULL);
	~File_Injector();

	ULONG_PTR alloc(SIZE_T size, ULONG_PTR baseAddress = 0, bool Syscalltype = false);
	bool WriteVirtualMemory(ULONG_PTR destination_Addr, ULONG_PTR source_Addr, SIZE_T size, bool Syscalltype = false);

	void writeHeader(ULONG_PTR destination_Addr, ULONG_PTR source_Addr, ULONG srcSize);
	void writeSection(ULONG_PTR destination_Addr, ULONG_PTR source_Addr, ULONG_PTR sectionAddress);

	ULONG callEntryPoint(ULONG_PTR baseAddress, ULONG addressOfEntryPoint);
	bool Inject_Execute(ULONG_PTR destination_Addr, bool Syscalltype = false);


private:
	bool remote_check;
	HANDLE process_handle;
	ULONG_PTR _allocAddress;
	ULONG _entrypointOffset;
};